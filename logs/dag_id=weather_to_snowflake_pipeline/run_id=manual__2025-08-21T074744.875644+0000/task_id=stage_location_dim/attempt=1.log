{"timestamp":"2025-08-21T07:47:55.239020","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-21T07:47:55.240125","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fetchin_cleaning.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-21T07:47:55.475767Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T07:47:55.486665Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T07:47:55.491150Z","level":"info","event":"Current task name:stage_location_dim","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T07:47:55.501539Z","level":"info","event":"Dag name:weather_to_snowflake_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T07:47:55.476628","level":"info","event":"Executing: PUT file:///opt/airflow/data/location_dim.csv @%LOCATION_DIM OVERWRITE = TRUE;","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator"}
{"timestamp":"2025-08-21T07:47:55.503347","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-21T07:47:55.531400","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-21T07:47:56.670642","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-21T07:47:56.682216","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-21T07:47:56.683068","level":"info","event":"Snowflake Connector for Python Version: 3.16.0, Python Version: 3.12.11, Platform: Linux-6.6.87.2-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-08-21T07:47:56.683825","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-08-21T07:47:58.282939","level":"info","event":"Running statement: PUT file:///opt/airflow/data/location_dim.csv @%LOCATION_DIM OVERWRITE = TRUE;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T07:47:58.283191","level":"info","event":"Running statement: PUT file:///opt/airflow/data/location_dim.csv @%LOCATION_DIM OVERWRITE = TRUE;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T07:47:59.535807","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T07:47:59.536141","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T07:47:59.536220","level":"info","event":"Snowflake query id: 01be8373-0000-abf4-0000-c31d00053306","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T07:48:00.083742","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198cb99-1892-7e72-88ad-ed8483f23288'), task_id='stage_location_dim', dag_id='weather_to_snowflake_pipeline', run_id='manual__2025-08-21T07:47:44.875644+00:00', try_number=1, map_index=-1, hostname='74754e3105f5', context_carrier={}, task=<Task(SQLExecuteQueryOperator): stage_location_dim>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 21, 7, 47, 53, 849469, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/weather_to_snowflake_pipeline/runs/manual__2025-08-21T07%3A47%3A44.875644%2B00%3A00/tasks/stage_location_dim?try_number=1')","logger":"task"}
{"timestamp":"2025-08-21T07:48:00.148119Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T07:48:00.148798Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T07:48:00.149365Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): stage_location_dim>","chan":"stdout","logger":"task"}
