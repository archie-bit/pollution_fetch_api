{"timestamp":"2025-09-03T19:56:24.628708","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-03T19:56:24.630401","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fetchin_cleaning.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-03T19:56:24.738223Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T19:56:24.738818Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T19:56:24.741278Z","level":"info","event":"Current task name:stage_location_dim","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T19:56:24.741609Z","level":"info","event":"Dag name:weather_to_snowflake_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T19:56:24.738916","level":"info","event":"Executing: PUT file:///opt/airflow/data/location_dim.csv @%LOCATION_DIM OVERWRITE = TRUE;","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator"}
{"timestamp":"2025-09-03T19:56:24.741603","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-03T19:56:24.753616","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-03T19:56:25.866048","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-03T19:56:25.877662","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-03T19:56:25.878369","level":"info","event":"Snowflake Connector for Python Version: 3.16.0, Python Version: 3.12.11, Platform: Linux-6.6.87.2-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-09-03T19:56:25.879169","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-09-03T19:56:27.053913","level":"info","event":"Running statement: PUT file:///opt/airflow/data/location_dim.csv @%LOCATION_DIM OVERWRITE = TRUE;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-09-03T19:56:27.054133","level":"info","event":"Running statement: PUT file:///opt/airflow/data/location_dim.csv @%LOCATION_DIM OVERWRITE = TRUE;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-09-03T19:56:28.069952","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-09-03T19:56:28.070454","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-09-03T19:56:28.070576","level":"info","event":"Snowflake query id: 01becf6c-0000-b76c-0000-c31d0008a012","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-09-03T19:56:28.534168","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01991126-9c50-75ff-a885-f8deefaf2ac7'), task_id='stage_location_dim', dag_id='weather_to_snowflake_pipeline', run_id='manual__2025-09-03T19:56:07.091635+00:00', try_number=1, map_index=-1, hostname='894a893f40a3', context_carrier={}, task=<Task(SQLExecuteQueryOperator): stage_location_dim>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 3, 19, 56, 17, 723525, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/weather_to_snowflake_pipeline/runs/manual__2025-09-03T19%3A56%3A07.091635%2B00%3A00/tasks/stage_location_dim?try_number=1')","logger":"task"}
{"timestamp":"2025-09-03T19:56:28.579326Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T19:56:28.580054Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T19:56:28.587393Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): stage_location_dim>","chan":"stdout","logger":"task"}
