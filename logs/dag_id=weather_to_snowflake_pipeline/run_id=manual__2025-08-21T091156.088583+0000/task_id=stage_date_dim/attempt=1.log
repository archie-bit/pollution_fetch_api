{"timestamp":"2025-08-21T09:12:05.671365","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-21T09:12:05.672458","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fetchin_cleaning.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-21T09:12:05.811767Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:12:05.812509Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:12:05.813538Z","level":"info","event":"Current task name:stage_date_dim","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:12:05.813998Z","level":"info","event":"Dag name:weather_to_snowflake_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:12:05.813115","level":"info","event":"Executing: PUT file:///opt/airflow/data/date_dim.csv @%DATE_DIM OVERWRITE = TRUE;","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator"}
{"timestamp":"2025-08-21T09:12:05.819831","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-21T09:12:05.832812","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-21T09:12:06.725773","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-21T09:12:06.736739","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-21T09:12:06.737279","level":"info","event":"Snowflake Connector for Python Version: 3.16.0, Python Version: 3.12.11, Platform: Linux-6.6.87.2-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-08-21T09:12:06.737896","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-08-21T09:12:07.867554","level":"info","event":"Running statement: PUT file:///opt/airflow/data/date_dim.csv @%DATE_DIM OVERWRITE = TRUE;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:12:07.867707","level":"info","event":"Running statement: PUT file:///opt/airflow/data/date_dim.csv @%DATE_DIM OVERWRITE = TRUE;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:12:08.923252","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:12:08.923571","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:12:08.923704","level":"info","event":"Snowflake query id: 01be83c8-0000-aabe-0000-c31d00052cda","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:12:09.415711","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198cbe6-2c2a-79e4-86aa-bd2d607d7cfc'), task_id='stage_date_dim', dag_id='weather_to_snowflake_pipeline', run_id='manual__2025-08-21T09:11:56.088583+00:00', try_number=1, map_index=-1, hostname='74754e3105f5', context_carrier={}, task=<Task(SQLExecuteQueryOperator): stage_date_dim>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 21, 9, 12, 4, 410006, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/weather_to_snowflake_pipeline/runs/manual__2025-08-21T09%3A11%3A56.088583%2B00%3A00/tasks/stage_date_dim?try_number=1')","logger":"task"}
{"timestamp":"2025-08-21T09:12:09.450787Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:12:09.451274Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:12:09.451715Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): stage_date_dim>","chan":"stdout","logger":"task"}
