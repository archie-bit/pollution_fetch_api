{"timestamp":"2025-08-21T09:08:53.438900","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-21T09:08:53.439836","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fetchin_cleaning.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-21T09:08:53.654049Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:08:53.659683Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:08:53.662793Z","level":"info","event":"Current task name:truncate_pollutants_fact","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:08:53.663650Z","level":"info","event":"Dag name:weather_to_snowflake_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:08:53.655675","level":"info","event":"Executing: TRUNCATE TABLE POLLUTION_OVERTIME.POLLUTANTS_FACT;","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator"}
{"timestamp":"2025-08-21T09:08:53.659317","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-21T09:08:53.685644","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-21T09:08:55.355593","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-21T09:08:55.367369","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-21T09:08:55.368158","level":"info","event":"Snowflake Connector for Python Version: 3.16.0, Python Version: 3.12.11, Platform: Linux-6.6.87.2-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-08-21T09:08:55.369414","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-08-21T09:08:56.473774","level":"info","event":"Running statement: TRUNCATE TABLE POLLUTION_OVERTIME.POLLUTANTS_FACT;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:08:56.473974","level":"info","event":"Running statement: TRUNCATE TABLE POLLUTION_OVERTIME.POLLUTANTS_FACT;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:08:56.936613","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:08:56.936915","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:08:56.937017","level":"info","event":"Snowflake query id: 01be83c4-0000-abf1-0000-c31d00055376","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:08:57.617962","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198cbe3-2883-7236-9b1a-2d6e35b6d095'), task_id='truncate_pollutants_fact', dag_id='weather_to_snowflake_pipeline', run_id='manual__2025-08-21T09:08:38.511015+00:00', try_number=1, map_index=-1, hostname='74754e3105f5', context_carrier={}, task=<Task(SQLExecuteQueryOperator): truncate_pollutants_fact>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 21, 9, 8, 52, 232079, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/weather_to_snowflake_pipeline/runs/manual__2025-08-21T09%3A08%3A38.511015%2B00%3A00/tasks/truncate_pollutants_fact?try_number=1')","logger":"task"}
{"timestamp":"2025-08-21T09:08:57.677669Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:08:57.678166Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:08:57.678526Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): truncate_pollutants_fact>","chan":"stdout","logger":"task"}
