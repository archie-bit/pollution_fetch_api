{"timestamp":"2025-08-21T09:00:16.726016","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-21T09:00:16.726652","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fetchin_cleaning.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-21T09:00:16.820781Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:00:16.821246Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:00:16.825452Z","level":"info","event":"Current task name:truncate_pollutants_fact","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:00:16.826024Z","level":"info","event":"Dag name:weather_to_snowflake_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:00:16.821739","level":"info","event":"Executing: TRUNCATE TABLE POLLUTION_OVERTIME.POLLUTANTS_FACT;","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator"}
{"timestamp":"2025-08-21T09:00:16.824753","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-21T09:00:16.836765","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-21T09:00:17.612352","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-21T09:00:17.620729","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-21T09:00:17.621179","level":"info","event":"Snowflake Connector for Python Version: 3.16.0, Python Version: 3.12.11, Platform: Linux-6.6.87.2-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-08-21T09:00:17.621706","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-08-21T09:00:18.592703","level":"info","event":"Running statement: TRUNCATE TABLE POLLUTION_OVERTIME.POLLUTANTS_FACT;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:00:18.592867","level":"info","event":"Running statement: TRUNCATE TABLE POLLUTION_OVERTIME.POLLUTANTS_FACT;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:00:19.024259","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:00:19.024644","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:00:19.024726","level":"info","event":"Snowflake query id: 01be83bc-0000-abf4-0000-c31d000543ee","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-08-21T09:00:19.717755","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198cbdb-414e-7d1e-b26c-d0f57a26f5b0'), task_id='truncate_pollutants_fact', dag_id='weather_to_snowflake_pipeline', run_id='scheduled__2025-08-21T09:00:00+00:00', try_number=1, map_index=-1, hostname='74754e3105f5', context_carrier={}, task=<Task(SQLExecuteQueryOperator): truncate_pollutants_fact>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 21, 9, 0, 15, 927058, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/weather_to_snowflake_pipeline/runs/scheduled__2025-08-21T09%3A00%3A00%2B00%3A00/tasks/truncate_pollutants_fact?try_number=1')","logger":"task"}
{"timestamp":"2025-08-21T09:00:19.760646Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:00:19.761222Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-21T09:00:19.766081Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): truncate_pollutants_fact>","chan":"stdout","logger":"task"}
