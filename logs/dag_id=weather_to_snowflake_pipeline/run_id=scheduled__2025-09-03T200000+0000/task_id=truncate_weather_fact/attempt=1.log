{"timestamp":"2025-09-03T20:00:44.947188","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-03T20:00:44.948155","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fetchin_cleaning.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-03T20:00:45.053875Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T20:00:45.054782Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T20:00:45.057330Z","level":"info","event":"Current task name:truncate_weather_fact","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T20:00:45.057769Z","level":"info","event":"Dag name:weather_to_snowflake_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T20:00:45.055069","level":"info","event":"Executing: TRUNCATE TABLE POLLUTION_OVERTIME.WEATHER_FACT;","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator"}
{"timestamp":"2025-09-03T20:00:45.057989","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-03T20:00:45.071282","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-03T20:00:45.466600","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-09-03T20:00:45.479841","level":"info","event":"Connection Retrieved 'weather_pollution'","logger":"airflow.hooks.base"}
{"timestamp":"2025-09-03T20:00:45.480509","level":"info","event":"Snowflake Connector for Python Version: 3.16.0, Python Version: 3.12.11, Platform: Linux-6.6.87.2-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-09-03T20:00:45.482309","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-09-03T20:00:48.819139","level":"info","event":"Running statement: TRUNCATE TABLE POLLUTION_OVERTIME.WEATHER_FACT;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-09-03T20:00:48.819434","level":"info","event":"Running statement: TRUNCATE TABLE POLLUTION_OVERTIME.WEATHER_FACT;, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-09-03T20:00:49.525985","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-09-03T20:00:49.526515","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-09-03T20:00:49.526626","level":"info","event":"Snowflake query id: 01becf70-0000-b76c-0000-c31d0008a056","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-09-03T20:00:50.343617","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199112a-2d82-7ecb-b943-3a5686941c1b'), task_id='truncate_weather_fact', dag_id='weather_to_snowflake_pipeline', run_id='scheduled__2025-09-03T20:00:00+00:00', try_number=1, map_index=-1, hostname='894a893f40a3', context_carrier={}, task=<Task(SQLExecuteQueryOperator): truncate_weather_fact>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 3, 20, 0, 44, 167326, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/weather_to_snowflake_pipeline/runs/scheduled__2025-09-03T20%3A00%3A00%2B00%3A00/tasks/truncate_weather_fact?try_number=1')","logger":"task"}
{"timestamp":"2025-09-03T20:00:50.409936Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T20:00:50.410510Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-03T20:00:50.414180Z","level":"info","event":"Task operator:<Task(SQLExecuteQueryOperator): truncate_weather_fact>","chan":"stdout","logger":"task"}
